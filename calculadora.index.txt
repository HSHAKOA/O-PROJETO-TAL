<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Assistente de Especificação de LED v2.1</title>
    
    <!-- Estilos CSS embutidos no HTML -->
    <style>
        /* CSS Reset e Configurações Globais */
        :root {
            --cor-fundo-inicio: #eef2f3;
            --cor-fundo-fim: #f0f5f9;
            --cor-surface: #ffffff;
            --cor-primaria: #005a9c; /* Azul corporativo */
            --cor-destaque: #009a9c; /* Ciano técnico */
            --cor-led: #ffc107; /* Amarelo para o LED */
            --cor-texto-principal: #1a202c;
            --cor-texto-secundario: #4a5568;
            --cor-erro: #c53030;
            --sombra: 0 8px 25px rgba(0, 0, 0, 0.08);
            --borda-radius: 12px;
        }

        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, var(--cor-fundo-inicio), var(--cor-fundo-fim));
            background-size: 200% 200%;
            color: var(--cor-texto-principal);
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            padding: 20px;
            animation: backgroundAnimation 20s ease infinite;
        }
        
        @keyframes backgroundAnimation {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }

        /* Container Principal */
        .container {
            width: 100%;
            max-width: 900px;
            background-color: var(--cor-surface);
            border-radius: var(--borda-radius);
            box-shadow: var(--sombra);
            border: 1px solid #e2e8f0;
            padding: 3rem;
            display: flex;
            flex-direction: column;
            gap: 2.5rem;
        }

        /* Cabeçalho */
        header {
            text-align: center;
        }
        header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--cor-texto-principal);
        }
        header p {
            font-size: 1.2rem;
            color: var(--cor-texto-secundario);
            margin-top: 0.5rem;
        }

        /* Seção de Entrada */
        .input-section {
            background-color: #f7fafc;
            padding: 2rem;
            border-radius: var(--borda-radius);
            border: 1px solid #e2e8f0;
        }
        
        .input-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
            gap: 1.5rem;
            align-items: end;
        }

        .input-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .input-group label {
            font-weight: 500;
            color: var(--cor-texto-secundario);
            font-size: 1rem;
        }

        .input-group input, .input-group select {
            width: 100%;
            padding: 14px;
            border: 1px solid #cbd5e0;
            border-radius: 8px;
            font-size: 1.1rem;
            background-color: #fff;
            color: var(--cor-texto-principal);
            transition: border-color 0.3s, box-shadow 0.3s;
        }
        .input-group input:focus, .input-group select:focus {
            outline: none;
            border-color: var(--cor-primaria);
            box-shadow: 0 0 0 3px rgba(0, 90, 156, 0.3);
        }

        #calculateBtn {
            grid-column: 1 / -1;
            margin-top: 1.5rem;
            background: linear-gradient(90deg, var(--cor-primaria), var(--cor-destaque));
            color: white;
            border: none;
            padding: 16px 20px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            transition: transform 0.2s, box-shadow 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
        }
        #calculateBtn:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0, 90, 156, 0.2);
        }
        #calculateBtn:disabled {
            background: #cbd5e0;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Seção de Resultado */
        #resultSection {
            display: none;
            gap: 2rem;
            border-top: 1px solid #e2e8f0;
            padding-top: 2.5rem;
            flex-direction: column;
        }
        
        .result-layout {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2.5rem;
        }

        .result-details {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .result-card {
            background-color: #f7fafc;
            border: 1px solid #e2e8f0;
            border-left: 5px solid var(--cor-primaria);
            padding: 1.5rem 2rem;
            border-radius: var(--borda-radius);
        }
        .result-card h3 {
            margin-top: 0;
            margin-bottom: 1.2rem;
            color: var(--cor-primaria);
            font-size: 1.4rem;
        }
        .result-card p {
            margin: 0.8rem 0;
            line-height: 1.7;
            font-size: 1.1rem;
            color: var(--cor-texto-secundario);
        }
        .result-card strong {
            color: var(--cor-texto-principal);
            font-weight: 500;
        }
        .result-card .msec-code {
            background-color: var(--cor-primaria);
            color: white;
            padding: 0.3rem 0.8rem;
            border-radius: 20px;
            font-size: 1rem;
            font-weight: bold;
            display: inline-block;
        }

        #actionsContainer button {
            background-color: transparent;
            color: var(--cor-destaque);
            border: 2px solid var(--cor-destaque);
            padding: 12px 18px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: bold;
            transition: all 0.2s;
            margin-right: 10px;
        }
        #actionsContainer button:hover {
            background-color: var(--cor-destaque);
            color: #fff;
        }
        #actionsContainer button:disabled {
            color: #a0aec0;
            border-color: #cbd5e0;
            cursor: not-allowed;
            background-color: transparent;
        }

        /* Visualização do Quadro */
        .visualization {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 1rem;
            padding: 2rem;
            background-color: #f7fafc;
            border-radius: var(--borda-radius);
            border: 1px solid #e2e8f0;
        }
        
        .quadro {
            position: relative;
            width: 120px;
            height: 400px;
            background-color: #e2e8f0;
            border: 2px solid #cbd5e0;
            border-radius: var(--borda-radius);
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .led-visual {
            position: relative;
            width: 75%;
            background-color: var(--cor-led);
            border: 2px solid #b7791f;
            border-radius: 4px;
            transition: height 0.5s ease-in-out;
            animation: fadeIn 0.7s ease-in-out;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #4a5568;
            font-weight: bold;
            font-size: 1rem;
            text-align: center;
        }

        /* Seção do Relatório da IA */
        #reportSection {
            display: none;
        }
        #reportContainer {
            background-color: #f7fafc;
            border: 1px solid #e2e8f0;
            border-radius: var(--borda-radius);
            padding: 2rem;
            white-space: pre-wrap;
            font-family: 'Courier New', Courier, monospace;
            line-height: 1.7;
            font-size: 1rem;
            color: var(--cor-texto-secundario);
            max-height: 450px;
            overflow-y: auto;
        }
        #reportContainer h4 {
            color: var(--cor-primaria);
            font-size: 1.3rem;
            margin-top: 0;
            border-bottom: 1px solid #e2e8f0;
            padding-bottom: 1rem;
            margin-bottom: 1rem;
        }

        /* Loading Spinner */
        .spinner {
            border: 3px solid rgba(255, 255, 255, 0.3);
            width: 22px;
            height: 22px;
            border-radius: 50%;
            border-left-color: #fff;
            animation: spin 1s ease infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Modal de Mensagem */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .modal-content {
            background: var(--cor-surface);
            padding: 2.5rem;
            border-radius: var(--borda-radius);
            box-shadow: var(--sombra);
            text-align: center;
            max-width: 90%;
            width: 450px;
        }
        .modal-content h3 {
            color: var(--cor-erro);
            margin-bottom: 1rem;
            font-size: 1.5rem;
        }
        .modal-content p {
            font-size: 1.1rem;
            color: var(--cor-texto-secundario);
        }
        .modal-content button {
            background-color: var(--cor-primaria);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 2rem;
            font-size: 1.1rem;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: scaleY(0.5); }
            to { opacity: 1; transform: scaleY(1); }
        }
        
        @media (max-width: 768px) {
            .container { padding: 1.5rem; }
            .result-layout { grid-template-columns: 1fr; }
            .visualization { order: -1; }
        }
    </style>
</head>
<body>

    <main class="container">
        <header>
            <h1>Assistente de Especificação de LED</h1>
            <p>Calcule o LED ideal e gere relatórios técnicos com IA.</p>
        </header>

        <section class="input-section">
            <div class="input-grid">
                <div class="input-group">
                    <label for="alturaColuna">Altura da Coluna (mm)</label>
                    <input type="number" id="alturaColuna" placeholder="Ex: 1517" min="56">
                </div>
                <div class="input-group">
                    <label for="voltagemSelect">Voltagem</label>
                    <select id="voltagemSelect"></select>
                </div>
                <div class="input-group">
                    <label for="corSelect">Cor do LED</label>
                    <select id="corSelect"></select>
                </div>
            </div>
            <button id="calculateBtn">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="8" y1="6" x2="16" y2="6"></line><line x1="16" y1="10" x2="16" y2="18"></line><line x1="12" y1="10" x2="12" y2="18"></line><line x1="8" y1="10" x2="8" y2="18"></line></svg>
                Calcular LED Ideal
            </button>
        </section>

        <section id="resultSection">
            <div class="result-layout">
                <div class="result-details">
                    <div id="resultCard" class="result-card"></div>
                    <div id="actionsContainer"></div>
                    <div id="reportSection">
                        <div id="reportContainer"></div>
                    </div>
                </div>
                <div class="visualization">
                    <h3>Visualização</h3>
                    <div class="quadro" id="quadroVisual">
                        <div class="led-visual" style="height: 0%;"></div>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <div class="modal-overlay" id="messageModal">
        <div class="modal-content">
            <h3 id="modalTitle"></h3>
            <p id="modalMessage"></p>
            <button id="modalCloseBtn">Entendi</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- SEÇÃO DE DADOS E CONSTANTES ---
            const espacoEstrutura = 55;
            const ledDatabaseCSV = `Nº do item;Descrição do item;Altura (MM);Voltagem;Cor do LED
Msec2514;BARRA LED SLIMTUB;1470 mm;220V;6500K
Msec2538;BARRA LED SLIMTUB;1370 mm;220V;4000K
Msec2542;BARRA LED SLIMTUB;1200 mm;220V;4000K
Msec2543;BARRA LED SLIMTUB;700 mm;220V;4000K
Msec2572;BARRA LED SLIMTUB;1200 mm;220V;3000K
Msec2584;BARRA LED SLIMTUB;1370 mm;220V;6500K
Msec2585;BARRA LED SLIMTUB;1200 mm;220V;6500K
Msec2586;BARRA LED SLIMTUB;500 mm;220V;4000K
Msec2587;BARRA LED SLIMTUB;1270 mm;220V;3000K
Msec2588;BARRA LED SLIMTUB;1370 mm;220V;3000K
Msec2589;BARRA LED SLIMTUB;1470 mm;220V;3000K
Msec2590;BARRA LED SLIMTUB;1470 mm;220V;4000K
Msec2591;BARRA LED SLIMTUB;1380 mm;12V;3000K
Msec2592;BARRA LED SLIMTUB;1380 mm;12V;4000K
Msec2593;BARRA LED SLIMTUB;1380 mm;12V;6500K
Msec2594;BARRA LED SLIMTUB;1230 mm;12V;3000K
Msec2595;BARRA LED SLIMTUB;1230 mm;12V;4000K
Msec2596;BARRA LED SLIMTUB;1230 mm;12V;6500K
Msec2597;BARRA LED SLIMTUB;1180 mm;12V;3000K
Msec2598;BARRA LED SLIMTUB;1180 mm;12V;4000K
Msec2599;BARRA LED SLIMTUB;1180 mm;12V;6500K`;

            let ledData = [];
            let compatibleLeds = [];
            let currentLedIndex = 0;

            // --- ELEMENTOS DO DOM ---
            const alturaInput = document.getElementById('alturaColuna');
            const voltagemSelect = document.getElementById('voltagemSelect');
            const corSelect = document.getElementById('corSelect');
            const calculateBtn = document.getElementById('calculateBtn');
            const resultSection = document.getElementById('resultSection');
            const resultCard = document.getElementById('resultCard');
            const actionsContainer = document.getElementById('actionsContainer');
            const quadroVisual = document.getElementById('quadroVisual');
            const reportSection = document.getElementById('reportSection');
            const reportContainer = document.getElementById('reportContainer');
            const messageModal = document.getElementById('messageModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalMessage = document.getElementById('modalMessage');
            const modalCloseBtn = document.getElementById('modalCloseBtn');

            // --- INICIALIZAÇÃO ---
            function init() {
                parseCSVData();
                populateFilters();
                calculateBtn.addEventListener('click', handleCalculation);
                modalCloseBtn.addEventListener('click', () => messageModal.style.display = 'none');
                alturaInput.addEventListener('keyup', (e) => { if(e.key === 'Enter') handleCalculation() });
            }

            function parseCSVData() {
                const rows = ledDatabaseCSV.trim().split('\n');
                const headers = rows.shift().split(';');
                ledData = rows.map(row => {
                    const values = row.split(';');
                    return {
                        msec: values[0].trim(),
                        descricao: values[1].trim(),
                        altura: parseInt(values[2].replace('mm', '').trim(), 10),
                        voltagem: values[3].trim(),
                        cor: values[4].trim()
                    };
                });
            }

            function populateFilters() {
                const voltagens = [...new Set(ledData.map(led => led.voltagem))];
                const cores = [...new Set(ledData.map(led => led.cor))];
                
                voltagens.forEach(v => voltagemSelect.add(new Option(v, v)));
                cores.forEach(c => corSelect.add(new Option(c, c)));
            }
            
            // --- LÓGICA DE CÁLCULO ---
            function handleCalculation() {
                const alturaColuna = parseFloat(alturaInput.value);
                if (isNaN(alturaColuna) || alturaColuna <= espacoEstrutura) {
                    showMessage('Valor Inválido', `Por favor, insira uma altura maior que ${espacoEstrutura} mm.`);
                    return;
                }

                const alturaUtil = alturaColuna - espacoEstrutura;
                const voltagem = voltagemSelect.value;
                const cor = corSelect.value;

                compatibleLeds = ledData
                    .filter(led => led.voltagem === voltagem && led.cor === cor && led.altura <= alturaUtil)
                    .sort((a, b) => b.altura - a.altura); // Ordena do maior para o menor

                if (compatibleLeds.length === 0) {
                    showMessage('Nenhum LED Compatível', 'Não foram encontrados LEDs com os critérios especificados para a altura útil calculada. Tente outros filtros.');
                    resultSection.style.display = 'none';
                    return;
                }

                currentLedIndex = 0;
                displayResults(compatibleLeds[currentLedIndex], alturaUtil);
            }

            function displayResults(led, alturaUtil) {
                if (!led) return;

                resultCard.innerHTML = `
                    <h3>LED Ideal Recomendado</h3>
                    <p>Com base na altura útil de <strong>${alturaUtil.toFixed(2)} mm</strong> e nos filtros selecionados:</p>
                    <p>
                        Código: <span class="msec-code">${led.msec}</span><br>
                        Altura: <strong>${led.altura} mm</strong><br>
                        Voltagem: <strong>${led.voltagem}</strong> | Cor: <strong>${led.cor}</strong>
                    </p>
                `;
                
                updateVisualization(led, alturaUtil);
                createActionButtons();
                resultSection.style.display = 'block';
                reportSection.style.display = 'none';
                resultSection.scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
            
            function createActionButtons() {
                actionsContainer.innerHTML = ''; // Limpa botões antigos

                const changeBtn = document.createElement('button');
                changeBtn.id = 'changeLedBtn';
                changeBtn.textContent = 'Trocar por Modelo Menor';
                changeBtn.onclick = handleChangeToSmaller;
                changeBtn.disabled = currentLedIndex >= compatibleLeds.length - 1;
                actionsContainer.appendChild(changeBtn);

                const reportBtn = document.createElement('button');
                reportBtn.id = 'generateReportBtn';
                reportBtn.innerHTML = 'Gerar Relatório Técnico IA';
                reportBtn.onclick = handleReportGeneration;
                actionsContainer.appendChild(reportBtn);
            }

            function handleChangeToSmaller() {
                if (currentLedIndex < compatibleLeds.length - 1) {
                    currentLedIndex++;
                    const newLed = compatibleLeds[currentLedIndex];
                    const alturaUtil = parseFloat(alturaInput.value) - espacoEstrutura;
                    displayResults(newLed, alturaUtil);
                }
            }

            // --- VISUALIZAÇÃO E UI ---
            function updateVisualization(led, alturaUtil) {
                const ledVisual = quadroVisual.querySelector('.led-visual');
                const alturaProporcional = (led.altura / alturaUtil) * 100;
                ledVisual.style.height = `${alturaProporcional}%`;
                ledVisual.textContent = `${led.altura}mm`;
            }

            function showMessage(title, message) {
                modalTitle.textContent = title;
                modalMessage.textContent = message;
                messageModal.style.display = 'flex';
            }

            // --- API GEMINI ---
            async function handleReportGeneration() {
                const btn = document.getElementById('generateReportBtn');
                btn.disabled = true;
                btn.innerHTML = '<div class="spinner"></div> Gerando Relatório...';
                
                reportSection.style.display = 'block';
                reportContainer.innerHTML = '<h4>Relatório Técnico Gerado por IA</h4>Consultando o assistente de engenharia...';

                const currentLed = compatibleLeds[currentLedIndex];
                const alturaColuna = parseFloat(alturaInput.value);
                const alturaUtil = alturaColuna - espacoEstrutura;

                const prompt = `
                    Você é um assistente de engenharia industrial sênior, especializado em automação e refrigeração.
                    Sua tarefa é gerar um relatório técnico conciso e profissional para um instalador.

                    **Contexto:** A seleção do componente foi feita usando uma base de dados interna (CSV) com os seguintes produtos:
                    ${ledDatabaseCSV}

                    **Dados da Solicitação do Usuário:**
                    - Altura Total da Coluna do Quadro: ${alturaColuna} mm
                    - Voltagem Requerida: ${currentLed.voltagem}
                    - Cor do LED Requerida: ${currentLed.cor}

                    **Resultado do Cálculo e Seleção:**
                    - Altura Útil (descontando 55mm de estrutura): ${alturaUtil.toFixed(2)} mm
                    - Componente Selecionado (Código Msec): ${currentLed.msec}
                    - Detalhes do Componente: Barra de LED com ${currentLed.altura} mm, ${currentLed.voltagem}, cor ${currentLed.cor}.

                    **Estrutura do Relatório (use este formato exato):**
                    1.  **SUMÁRIO DA ESPECIFICAÇÃO:**
                        - Apresente os dados da solicitação e o resultado do cálculo de forma clara.

                    2.  **JUSTIFICATIVA TÉCNICA DA ESCOLHA:**
                        - Explique que o LED de código ${currentLed.msec} foi selecionado por ser o modelo com a maior altura possível que se encaixa na altura útil de ${alturaUtil.toFixed(2)} mm, respeitando os critérios de voltagem e cor. Se o usuário tiver trocado para um modelo menor (o que você não sabe, mas pode mencionar como possibilidade), explique que a escolha pode ter sido ajustada para um modelo alternativo menor, também compatível.

                    3.  **RECOMENDAÇÕES CRÍTICAS DE INSTALAÇÃO:**
                        - Forneça 3 recomendações breves e importantes para o instalador. Ex: "Confirmar a centralização vertical do LED no espaço útil para uniformidade da luz.", "Verificar se a tensão da fonte de alimentação corresponde exatamente à especificação de ${currentLed.voltagem} do LED.", e "Assegurar que a fiação esteja devidamente isolada e protegida contra umidade, comum em sistemas de refrigeração."
                `;

                try {
                    const text = await callGeminiApi(prompt);
                    reportContainer.innerHTML = `<h4>Relatório Técnico Gerado por IA</h4>${text}`;
                } catch (error) {
                    console.error("Gemini API Error:", error);
                    reportContainer.innerHTML = `<h4>Erro</h4><p>Não foi possível gerar o relatório. Verifique o console para mais detalhes.</p>`;
                } finally {
                    btn.disabled = false;
                    btn.innerHTML = 'Gerar Relatório Técnico IA';
                    reportSection.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
            }
            
            async function callGeminiApi(prompt) {
                const apiKey = ""; // A chave é gerenciada pelo ambiente de execução
                const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}`;
                
                const payload = { contents: [{ parts: [{ text: prompt }] }] };

                const response = await fetch(apiUrl, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if (!response.ok) throw new Error(`API request failed: ${response.status}`);
                const result = await response.json();

                if (result.candidates?.[0]?.content?.parts?.[0]?.text) {
                    return result.candidates[0].content.parts[0].text;
                } else {
                    throw new Error("Resposta da API inválida ou sem conteúdo.");
                }
            }

            init();
        });
    </script>

</body>
</html>
